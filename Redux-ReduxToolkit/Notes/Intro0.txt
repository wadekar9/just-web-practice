# What is Redux ?
---> "Redux is predictable state container for javascript apps".
---> "Redux is library for javascript apps".
---> "Redux stores and manage state globaly for javascript apps".

# Why Redux ?
---> If you want to manage the global state of your application is a predictable way, redux can help you.
---> The patterns and tools provided by redux make it easier to understand when, where, why and how the state in your application is being updated, and how your application logic will behave when those changes occur.
---> Redux guides you towards writing code that is predictable and testable, which helps give you confidence that your application will work as expected.

# When should use redux in javascript apps ? 
---> You have large amounts of application state are needed in many places in tha app.
---> The app state is updated frequently over time.
---> The logic to update that state may be complex.
---> The app has a medium or large-sized codebase, and might be worked on by many people.

# What is Redux Toolkit ?
---> Redux Toolkit is the official, opinionated, batteries-included toolset for efficient Redux development.

# Why Redux Toolkit ?
---> Redux is great, but it does have a few shortcomings
    * Configuring redux in an app seems complicated
    * In addition to redux, a lot of other packages have to be installed to get redux to do something useful
    * Redux requires too much boilerplate code
---> Redux Toolkit serves as an abstraction over redux.

## Notes :
---> React-Redux is the official Redux UI Binding library for react.
---> React-Redux provide some useful functions to perform redux useage in app.

     -------                -----------                --------------------
    | React | <---------> | React-Redux | <--------> | Redux(Redux-Toolkit) |
     -------                -----------                --------------------
    
